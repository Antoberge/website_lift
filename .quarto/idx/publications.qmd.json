{"title":"Nos Publications","markdown":{"yaml":{"title":"Nos Publications","listing":{"id":"pubslist","contents":"pubs","type":"grid","grid-columns":4,"sort":"date desc","page-size":12,"fields":["image","title","date","categories","pdf","pubtype"],"filter-ui":false,"categories":false}},"containsRefs":false,"markdown":"\n\n\n<div class=\"pubtype-toggle btn-group mb-3\" role=\"group\" aria-label=\"Filtrer par type\">\n  <button class=\"btn btn-outline-secondary active\" data-show=\"wp\">Working Papers</button>\n  <button class=\"btn btn-outline-secondary\" data-show=\"policy\">Policy Papers</button>\n</div>\n\n<div class=\"pubs-toolbar d-flex flex-wrap gap-2 align-items-center mb-3\">\n  <!-- search -->\n  <input id=\"pubs-search\" type=\"search\" class=\"form-control form-control-sm\"\n         placeholder=\"Search publications…\" style=\"max-width: 320px;\">\n  <!-- tags get injected here -->\n  <div id=\"pubs-tags\" class=\"d-flex flex-wrap gap-1 ms-auto\"></div>\n</div>\n\n\n<script>\ndocument.addEventListener('DOMContentLoaded', function () {\n  const root = document.getElementById('listing-pubslist');\n  if (!root) return;\n\n  const cards = root.querySelectorAll('.quarto-grid-item.card');\n\n  cards.forEach(card => {\n    // 1) Grab pdf + pubtype from the metadata table generated by Quarto\n    const table = card.querySelector('.card-other-values');\n    const pdfCell = table?.querySelector('td.pdf');\n    const typeCell = table?.querySelector('td.pubtype');\n\n    const pdfUrl  = pdfCell ? pdfCell.textContent.trim() : '';\n    const pubtype = typeCell ? typeCell.textContent.trim() : '';\n\n    if (pubtype) card.setAttribute('data-pubtype', pubtype);\n\n    // 2) Ensure we have a meta row (PDF left, date right)\n    const body  = card.querySelector('.card-body');\n    const title = body?.querySelector('.card-title');\n    let metaRow = body?.querySelector('.card-meta-row');\n\n    if (!metaRow && body && title) {\n      metaRow = document.createElement('div');\n      metaRow.className = 'card-meta-row d-flex justify-content-between align-items-center mb-2';\n      body.insertBefore(metaRow, title);\n    }\n\n    // 3) Add PDF button if we have a URL\n    if (metaRow && pdfUrl) {\n      const btn = document.createElement('a');\n      btn.className = 'btn btn-sm btn-pdf stretched-link-fix';\n      btn.href = pdfUrl;\n      btn.setAttribute('download', '');\n      btn.textContent = 'PDF';\n      metaRow.prepend(btn);\n    }\n\n    // 4) Move the date into the meta row (to the right)\n    const dateEl = card.querySelector('.listing-date');\n    if (metaRow && dateEl) {\n      dateEl.classList.add('text-muted', 'small', 'ms-auto');\n      metaRow.appendChild(dateEl);\n    }\n\n    // 5) Hide/remove the raw metadata table so “/files/…” and “wp” disappear\n    if (table) table.remove();\n  });\n\n  // === Optional: client-side filter WP / Policy ===\n  const toggles = document.querySelectorAll('.pubtype-toggle [data-show]');\n  function applyFilter(kind) {\n    cards.forEach(c => {\n      const t = c.getAttribute('data-pubtype') || '';\n      c.style.display = (t === kind) ? '' : 'none';\n    });\n  }\n  if (toggles.length) {\n    toggles.forEach(b => b.addEventListener('click', () => {\n      toggles.forEach(x => x.classList.remove('active'));\n      b.classList.add('active');\n      applyFilter(b.dataset.show);\n    }));\n    applyFilter('wp'); // default\n  }\n});\n</script>\n<script>\ndocument.addEventListener('DOMContentLoaded', function () {\n  const root   = document.getElementById('listing-pubslist');\n  if (!root) return;\n\n  const cards  = () => root.querySelectorAll('.quarto-grid-item.card');\n  const search = document.getElementById('pubs-search');\n  const tagBar = document.getElementById('pubs-tags');\n\n  // ---- Build unique tag pills from card categories\n  const tagSet = new Set();\n  cards().forEach(card => {\n    card.querySelectorAll('.listing-category').forEach(cat => {\n      const label = (cat.textContent || '').trim();\n      if (label) tagSet.add(label);\n    });\n  });\n\n  // Render tag pills\n  let selectedTag = null;\n  function renderTags() {\n    tagBar.innerHTML = '';\n    // “All” pill (clear)\n    const all = document.createElement('button');\n    all.className = 'btn btn-sm btn-outline-secondary active';\n    all.textContent = 'All tags';\n    all.dataset.tag = '';\n    tagBar.appendChild(all);\n\n    [...tagSet].sort((a,b)=> a.localeCompare(b)).forEach(t => {\n      const b = document.createElement('button');\n      b.className = 'btn btn-sm btn-outline-secondary';\n      b.textContent = t;\n      b.dataset.tag = t;\n      tagBar.appendChild(b);\n    });\n\n    tagBar.querySelectorAll('button').forEach(b=>{\n      b.addEventListener('click', ()=>{\n        tagBar.querySelectorAll('button').forEach(x=> x.classList.remove('active'));\n        b.classList.add('active');\n        selectedTag = b.dataset.tag || null;\n        applyFilters();\n      });\n    });\n  }\n  renderTags();\n\n  // Track selected type (WP/Policy) if your toggle is present\n  let selectedType = 'wp';\n  const typeBtns = document.querySelectorAll('.pubtype-toggle [data-show]');\n  if (typeBtns.length) {\n    typeBtns.forEach(b => b.addEventListener('click', ()=>{\n      selectedType = b.dataset.show;\n      applyFilters();\n    }));\n  }\n\n  // Search handler\n  let searchText = '';\n  if (search) {\n    search.addEventListener('input', ()=>{\n      searchText = (search.value || '').trim().toLowerCase();\n      applyFilters();\n    });\n  }\n\n  // Core filter: type ∧ (tag?) ∧ (search?)\n  function applyFilters() {\n    cards().forEach(card => {\n      const typeOk = (card.getAttribute('data-pubtype') || '').toLowerCase() === (selectedType || '');\n      let tagOk = true;\n      if (selectedTag) {\n        tagOk = Array.from(card.querySelectorAll('.listing-category'))\n          .some(cat => (cat.textContent || '').trim() === selectedTag);\n      }\n      let searchOk = true;\n      if (searchText) {\n        const hay = [\n          card.querySelector('.listing-title')?.textContent || '',\n          ...Array.from(card.querySelectorAll('.listing-category')).map(x => x.textContent || '')\n        ].join(' ').toLowerCase();\n        searchOk = hay.includes(searchText);\n      }\n      card.style.display = (typeOk && tagOk && searchOk) ? '' : 'none';\n    });\n  }\n\n  // Initial filter (default to WP)\n  applyFilters();\n});\n</script>\n","srcMarkdownNoYaml":"\n\n\n<div class=\"pubtype-toggle btn-group mb-3\" role=\"group\" aria-label=\"Filtrer par type\">\n  <button class=\"btn btn-outline-secondary active\" data-show=\"wp\">Working Papers</button>\n  <button class=\"btn btn-outline-secondary\" data-show=\"policy\">Policy Papers</button>\n</div>\n\n<div class=\"pubs-toolbar d-flex flex-wrap gap-2 align-items-center mb-3\">\n  <!-- search -->\n  <input id=\"pubs-search\" type=\"search\" class=\"form-control form-control-sm\"\n         placeholder=\"Search publications…\" style=\"max-width: 320px;\">\n  <!-- tags get injected here -->\n  <div id=\"pubs-tags\" class=\"d-flex flex-wrap gap-1 ms-auto\"></div>\n</div>\n\n\n<script>\ndocument.addEventListener('DOMContentLoaded', function () {\n  const root = document.getElementById('listing-pubslist');\n  if (!root) return;\n\n  const cards = root.querySelectorAll('.quarto-grid-item.card');\n\n  cards.forEach(card => {\n    // 1) Grab pdf + pubtype from the metadata table generated by Quarto\n    const table = card.querySelector('.card-other-values');\n    const pdfCell = table?.querySelector('td.pdf');\n    const typeCell = table?.querySelector('td.pubtype');\n\n    const pdfUrl  = pdfCell ? pdfCell.textContent.trim() : '';\n    const pubtype = typeCell ? typeCell.textContent.trim() : '';\n\n    if (pubtype) card.setAttribute('data-pubtype', pubtype);\n\n    // 2) Ensure we have a meta row (PDF left, date right)\n    const body  = card.querySelector('.card-body');\n    const title = body?.querySelector('.card-title');\n    let metaRow = body?.querySelector('.card-meta-row');\n\n    if (!metaRow && body && title) {\n      metaRow = document.createElement('div');\n      metaRow.className = 'card-meta-row d-flex justify-content-between align-items-center mb-2';\n      body.insertBefore(metaRow, title);\n    }\n\n    // 3) Add PDF button if we have a URL\n    if (metaRow && pdfUrl) {\n      const btn = document.createElement('a');\n      btn.className = 'btn btn-sm btn-pdf stretched-link-fix';\n      btn.href = pdfUrl;\n      btn.setAttribute('download', '');\n      btn.textContent = 'PDF';\n      metaRow.prepend(btn);\n    }\n\n    // 4) Move the date into the meta row (to the right)\n    const dateEl = card.querySelector('.listing-date');\n    if (metaRow && dateEl) {\n      dateEl.classList.add('text-muted', 'small', 'ms-auto');\n      metaRow.appendChild(dateEl);\n    }\n\n    // 5) Hide/remove the raw metadata table so “/files/…” and “wp” disappear\n    if (table) table.remove();\n  });\n\n  // === Optional: client-side filter WP / Policy ===\n  const toggles = document.querySelectorAll('.pubtype-toggle [data-show]');\n  function applyFilter(kind) {\n    cards.forEach(c => {\n      const t = c.getAttribute('data-pubtype') || '';\n      c.style.display = (t === kind) ? '' : 'none';\n    });\n  }\n  if (toggles.length) {\n    toggles.forEach(b => b.addEventListener('click', () => {\n      toggles.forEach(x => x.classList.remove('active'));\n      b.classList.add('active');\n      applyFilter(b.dataset.show);\n    }));\n    applyFilter('wp'); // default\n  }\n});\n</script>\n<script>\ndocument.addEventListener('DOMContentLoaded', function () {\n  const root   = document.getElementById('listing-pubslist');\n  if (!root) return;\n\n  const cards  = () => root.querySelectorAll('.quarto-grid-item.card');\n  const search = document.getElementById('pubs-search');\n  const tagBar = document.getElementById('pubs-tags');\n\n  // ---- Build unique tag pills from card categories\n  const tagSet = new Set();\n  cards().forEach(card => {\n    card.querySelectorAll('.listing-category').forEach(cat => {\n      const label = (cat.textContent || '').trim();\n      if (label) tagSet.add(label);\n    });\n  });\n\n  // Render tag pills\n  let selectedTag = null;\n  function renderTags() {\n    tagBar.innerHTML = '';\n    // “All” pill (clear)\n    const all = document.createElement('button');\n    all.className = 'btn btn-sm btn-outline-secondary active';\n    all.textContent = 'All tags';\n    all.dataset.tag = '';\n    tagBar.appendChild(all);\n\n    [...tagSet].sort((a,b)=> a.localeCompare(b)).forEach(t => {\n      const b = document.createElement('button');\n      b.className = 'btn btn-sm btn-outline-secondary';\n      b.textContent = t;\n      b.dataset.tag = t;\n      tagBar.appendChild(b);\n    });\n\n    tagBar.querySelectorAll('button').forEach(b=>{\n      b.addEventListener('click', ()=>{\n        tagBar.querySelectorAll('button').forEach(x=> x.classList.remove('active'));\n        b.classList.add('active');\n        selectedTag = b.dataset.tag || null;\n        applyFilters();\n      });\n    });\n  }\n  renderTags();\n\n  // Track selected type (WP/Policy) if your toggle is present\n  let selectedType = 'wp';\n  const typeBtns = document.querySelectorAll('.pubtype-toggle [data-show]');\n  if (typeBtns.length) {\n    typeBtns.forEach(b => b.addEventListener('click', ()=>{\n      selectedType = b.dataset.show;\n      applyFilters();\n    }));\n  }\n\n  // Search handler\n  let searchText = '';\n  if (search) {\n    search.addEventListener('input', ()=>{\n      searchText = (search.value || '').trim().toLowerCase();\n      applyFilters();\n    });\n  }\n\n  // Core filter: type ∧ (tag?) ∧ (search?)\n  function applyFilters() {\n    cards().forEach(card => {\n      const typeOk = (card.getAttribute('data-pubtype') || '').toLowerCase() === (selectedType || '');\n      let tagOk = true;\n      if (selectedTag) {\n        tagOk = Array.from(card.querySelectorAll('.listing-category'))\n          .some(cat => (cat.textContent || '').trim() === selectedTag);\n      }\n      let searchOk = true;\n      if (searchText) {\n        const hay = [\n          card.querySelector('.listing-title')?.textContent || '',\n          ...Array.from(card.querySelectorAll('.listing-category')).map(x => x.textContent || '')\n        ].join(' ').toLowerCase();\n        searchOk = hay.includes(searchText);\n      }\n      card.style.display = (typeOk && tagOk && searchOk) ? '' : 'none';\n    });\n  }\n\n  // Initial filter (default to WP)\n  applyFilters();\n});\n</script>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","include-in-header":["_includes/head.html"],"css":["styles.scss"],"output-file":"publications.html"},"language":{"toc-title-document":"Table des matières","toc-title-website":"Sur cette page","related-formats-title":"Autres formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"La source","other-links-title":"Autres liens","code-links-title":"Liens de code","launch-dev-container-title":"Lancer le Dev Container","launch-binder-title":"Lancer le Binder","article-notebook-label":"Cahier d'articles","notebook-preview-download":"Télécharger le cahier","notebook-preview-download-src":"Télécharger le code source","notebook-preview-back":"Retour à l'article","manuscript-meca-bundle":"Archive MECA","section-title-abstract":"Résumé","section-title-appendices":"Annexes","section-title-footnotes":"Notes de bas de page","section-title-references":"Les références","section-title-reuse":"Réutilisation","section-title-copyright":"Droits d'auteur","section-title-citation":"Citation","appendix-attribution-cite-as":"Veuillez citer ce travail comme suit :","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Voir la Licence","title-block-author-single":"Auteur","title-block-author-plural":"Auteurs","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Publié","title-block-modified":"Mis à jour","title-block-keywords":"Mots-clés","callout-tip-title":"Astuce","callout-note-title":"Note","callout-warning-title":"Avertissement","callout-important-title":"Important","callout-caution-title":"Mise en garde","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Montrer tout le code","code-tools-hide-all-code":"Cacher tout le code","code-tools-view-source":"Voir les sources","code-tools-source-code":"Code source","tools-share":"Share","tools-download":"Download","code-line":"Ligne","code-lines":"Lignes","copy-button-tooltip":"Copier vers le presse-papier","copy-button-tooltip-success":"Copié","repo-action-links-edit":"Modifier cette page","repo-action-links-source":"Voir la source","repo-action-links-issue":"Faire part d'un problème","back-to-top":"Retour au sommet","search-no-results-text":"Pas de résultats","search-matching-documents-text":"documents trouvés","search-copy-link-title":"Copier le lien vers la recherche","search-hide-matches-text":"Cacher les correspondances additionnelles","search-more-match-text":"correspondance de plus dans ce document","search-more-matches-text":"correspondances de plus dans ce document","search-clear-button-title":"Effacer","search-text-placeholder":"","search-detached-cancel-button-title":"Annuler","search-submit-button-title":"Envoyer","search-label":"Recherche","toggle-section":"Basculer la section","toggle-sidebar":"Basculer la barre latérale","toggle-dark-mode":"Basculer le mode sombre","toggle-reader-mode":"Basculer en mode lecteur","toggle-navigation":"Basculer la navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Théorème","crossref-lem-title":"Lemme","crossref-cor-title":"Corollaire","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Définition","crossref-exm-title":"Exemple","crossref-exr-title":"Exercice","crossref-ch-prefix":"Chapitre","crossref-apx-prefix":"Annexe","crossref-sec-prefix":"Section","crossref-eq-prefix":"Équation","crossref-lof-title":"Liste des Figures","crossref-lot-title":"Liste des Tables","crossref-lol-title":"Liste des Listings","environment-proof-title":"Preuve","environment-remark-title":"Remarque","environment-solution-title":"Solution","listing-page-order-by":"Trier par","listing-page-order-by-default":"Ordre par défaut","listing-page-order-by-date-asc":"Le plus ancien","listing-page-order-by-date-desc":"Le plus récent","listing-page-order-by-number-desc":"Descendant","listing-page-order-by-number-asc":"Ascendant","listing-page-field-date":"Publié","listing-page-field-title":"Titre","listing-page-field-description":"Description","listing-page-field-author":"Auteur","listing-page-field-filename":"Nom de fichier","listing-page-field-filemodified":"Modifié","listing-page-field-subtitle":"Sous-titre","listing-page-field-readingtime":"Temps de lecture","listing-page-field-wordcount":"Compteur de Mots","listing-page-field-categories":"Thèmes","listing-page-minutes-compact":"{0} min.","listing-page-category-all":"Tous","listing-page-no-matches":"Aucun article correspondant","listing-page-words":"{0} mots","listing-page-filter":"Filtre","draft":"Brouillon"},"metadata":{"lang":"fr","fig-responsive":true,"quarto-version":"1.7.34","page-layout":"full","class":"pubpage","extensions":["_extensions/pubpage","_extensions/member","_extensions/homepage"],"theme":{"light":"flatly","dark":"darkly"},"grid":{"body-width":"1000px","margin-width":"220px","gutter-width":"1.25rem"},"title":"Nos Publications","listing":{"id":"pubslist","contents":"pubs","type":"grid","grid-columns":4,"sort":"date desc","page-size":12,"fields":["image","title","date","categories","pdf","pubtype"],"filter-ui":false,"categories":false}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}